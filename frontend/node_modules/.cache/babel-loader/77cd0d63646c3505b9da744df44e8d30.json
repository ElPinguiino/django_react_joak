{"ast":null,"code":"var _jsxFileName = \"/Users/juanaguilera/Desktop/Developing/client_projects/local_django_react/joak_django/joak/frontend/src/components/Modal/Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useCallback } from 'react';\nimport { Container, Button } from './ModalElements';\nimport { useSpring, animated } from 'react-spring';\nimport { Background, ModalWrapper, ModalImg, ModalContent, CloseModalButton } from './ModalElements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Modal = _ref => {\n  _s();\n\n  let {\n    showModal,\n    setShowModal\n  } = _ref;\n  const modalRef = useRef();\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n  });\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(e => {\n    if (e.key === 'Escape' && showModal) {\n      setShowModal(false);\n      console.log('I pressed');\n    }\n  }, [setShowModal, showModal]);\n  useEffect(() => {\n    document.addEventListener('keydown', keyPress);\n    return () => document.removeEventListener('keydown', keyPress);\n  }, [keyPress]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModal ? /*#__PURE__*/_jsxDEV(Background, {\n      onClick: closeModal,\n      ref: modalRef,\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        style: animation,\n        children: /*#__PURE__*/_jsxDEV(ModalWrapper, {\n          showModal: showModal,\n          children: [/*#__PURE__*/_jsxDEV(ModalContent, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Are you ready?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Get exclusive access to our next launch.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Join Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CloseModalButton, {\n            \"aria-label\": \"Close modal\",\n            onClick: () => setShowModal(prev => !prev)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(Modal, \"v+8xQfdHkWl7ocSyEt0s8KDGwZY=\", false, function () {\n  return [useSpring];\n});\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/juanaguilera/Desktop/Developing/client_projects/local_django_react/joak_django/joak/frontend/src/components/Modal/Modal.js"],"names":["React","useRef","useEffect","useCallback","Container","Button","useSpring","animated","Background","ModalWrapper","ModalImg","ModalContent","CloseModalButton","Modal","showModal","setShowModal","modalRef","animation","config","duration","opacity","transform","closeModal","e","current","target","keyPress","key","console","log","document","addEventListener","removeEventListener","prev"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,iBAAlC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,QAAnC,EAA6CC,YAA7C,EAA2DC,gBAA3D,QAAmF,iBAAnF;;;;AAEA,MAAMC,KAAK,GAAG,QAAiC;AAAA;;AAAA,MAAhC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAgC;AAC3C,QAAMC,QAAQ,GAAGf,MAAM,EAAvB;AAEA,QAAMgB,SAAS,GAAGX,SAAS,CAAC;AAC1BY,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADkB;AAI1BC,IAAAA,OAAO,EAAEN,SAAS,GAAG,CAAH,GAAO,CAJC;AAK1BO,IAAAA,SAAS,EAAEP,SAAS,GAAI,gBAAJ,GAAuB;AALjB,GAAD,CAA3B;;AAQA,QAAMQ,UAAU,GAAGC,CAAC,IAAI;AACtB,QAAIP,QAAQ,CAACQ,OAAT,KAAqBD,CAAC,CAACE,MAA3B,EAAmC;AACjCV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GAJD;;AAMA,QAAMW,QAAQ,GAAGvB,WAAW,CAC1BoB,CAAC,IAAI;AACH,QAAIA,CAAC,CAACI,GAAF,KAAU,QAAV,IAAsBb,SAA1B,EAAqC;AACnCC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;AACF,GANyB,EAO1B,CAACd,YAAD,EAAeD,SAAf,CAP0B,CAA5B;AAUAZ,EAAAA,SAAS,CACP,MAAM;AACJ4B,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCL,QAArC;AACA,WAAO,MAAMI,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCN,QAAxC,CAAb;AACD,GAJM,EAKP,CAACA,QAAD,CALO,CAAT;AAQA,sBACE;AAAA,cACGZ,SAAS,gBACR,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEQ,UAArB;AAAiC,MAAA,GAAG,EAAEN,QAAtC;AAAA,6BACE,QAAC,QAAD,CAAU,GAAV;AAAc,QAAA,KAAK,EAAEC,SAArB;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,SAAS,EAAEH,SAAzB;AAAA,kCACE,QAAC,YAAD;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,gBAAD;AACE,0BAAW,aADb;AAEE,YAAA,OAAO,EAAE,MAAMC,YAAY,CAACkB,IAAI,IAAI,CAACA,IAAV;AAF7B;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADQ,GAgBN;AAjBN,mBADF;AAqBD,CAxDH;;GAAMpB,K;UAGgBP,S;;;KAHhBO,K;AA0DJ,eAAeA,KAAf","sourcesContent":["import React, { useRef, useEffect, useCallback } from 'react';\nimport { Container, Button } from './ModalElements';\nimport { useSpring, animated } from 'react-spring';\nimport { Background, ModalWrapper, ModalImg, ModalContent, CloseModalButton } from './ModalElements';\n\nconst Modal = ({ showModal, setShowModal }) => {\n    const modalRef = useRef();\n  \n    const animation = useSpring({\n      config: {\n        duration: 250\n      },\n      opacity: showModal ? 1 : 0,\n      transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n    });\n  \n    const closeModal = e => {\n      if (modalRef.current === e.target) {\n        setShowModal(false);\n      }\n    };\n  \n    const keyPress = useCallback(\n      e => {\n        if (e.key === 'Escape' && showModal) {\n          setShowModal(false);\n          console.log('I pressed');\n        }\n      },\n      [setShowModal, showModal]\n    );\n  \n    useEffect(\n      () => {\n        document.addEventListener('keydown', keyPress);\n        return () => document.removeEventListener('keydown', keyPress);\n      },\n      [keyPress]\n    );\n  \n    return (\n      <>\n        {showModal ? (\n          <Background onClick={closeModal} ref={modalRef}>\n            <animated.div style={animation}>\n              <ModalWrapper showModal={showModal}>\n                <ModalContent>\n                  <h1>Are you ready?</h1>\n                  <p>Get exclusive access to our next launch.</p>\n                  <button>Join Now</button>\n                </ModalContent>\n                <CloseModalButton\n                  aria-label='Close modal'\n                  onClick={() => setShowModal(prev => !prev)}\n                />\n              </ModalWrapper>\n            </animated.div>\n          </Background>\n        ) : null}\n      </>\n    );\n  };\n\n  export default Modal"]},"metadata":{},"sourceType":"module"}