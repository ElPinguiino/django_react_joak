{"ast":null,"code":"import _regeneratorRuntime from\"/Users/juanaguilera/Desktop/Developing/local_django_react/joak_django/joak/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/juanaguilera/Desktop/Developing/local_django_react/joak_django/joak/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/juanaguilera/Desktop/Developing/local_django_react/joak_django/joak/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable no-undef */import axios from'axios';import React,{useState}from'react';import{useHistory}from'react-router-dom';import{StyledContactFormContainer,StyledContactForm,StyledInput,StyledFieldSet,StyledTextArea,StyledError,StyledButton,StyledH2,StyledLabel}from'./ContactFormElements';import validate from'./validateInfo';import useForm from'./useForm';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Form=function Form(_ref){var submitForm=_ref.submitForm;var history=useHistory();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),firstName=_useState2[0],setFirstName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),lastName=_useState4[0],setLastName=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),phoneNumber=_useState6[0],setPhoneNumber=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),email=_useState8[0],setEmail=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),contactType=_useState10[0],setContactType=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),message=_useState12[0],setMessage=_useState12[1];var addContactForm=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var formField;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:formField=new FormData();formField.append('first_name',firstName);formField.append('last_name',lastName);formField.append('phone_number',phoneNumber);formField.append('email',email);formField.append('contact_type',contactType);formField.append('message',message);_context.next=9;return axios({method:'post',url:'http://localhost:8000/api/contactform/',data:formField}).then(function(response){console.log(response.data);history.push('/');});case 9:case\"end\":return _context.stop();}}},_callee);}));return function addContactForm(){return _ref2.apply(this,arguments);};}();// const { handleChange, handleSubmit, values, errors } = useForm(\n//     submitForm,\n//     validate\n// );\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(StyledContactFormContainer,{children:[/*#__PURE__*/_jsx(StyledH2,{children:\"Message Us!\"}),/*#__PURE__*/_jsxs(StyledContactForm,{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"firstName\"}),/*#__PURE__*/_jsx(StyledInput,{type:\"text\",name:\"first_name\",placeholder:\"First Name\",defaultValue:firstName,onChange:function onChange(e){return setFirstName(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"lastName\"}),/*#__PURE__*/_jsx(StyledInput,{type:\"text\",name:\"last_name\",placeholder:\"Last Name\",defaultValue:lastName,onChange:function onChange(e){return setLastName(e.target.value);}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"phoneNumber\"}),/*#__PURE__*/_jsx(StyledInput,{type:\"text\",name:\"phone_number\",placeholder:\"Phone Number\",defaultValue:phoneNumber,onChange:function onChange(e){return setPhoneNumber(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\"}),/*#__PURE__*/_jsx(StyledInput,{type:\"email\",name:\"email\",placeholder:\"Email\",defaultValue:email,onChange:function onChange(e){return setEmail(e.target.value);}}),/*#__PURE__*/_jsxs(StyledFieldSet,{children:[/*#__PURE__*/_jsx(\"legend\",{children:\"Contact Type\"}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",defaultValue:\"Question\",name:\"contact_type\",onChange:function onChange(e){return setContactType(e.target.value);}}),\"Question\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",defaultValue:\"Concern\",name:\"contact_type\",onChange:function onChange(e){return setContactType(e.target.value);}}),\"Concern\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",defaultValue:\"Feedback\",name:\"contact_type\",onChange:function onChange(e){return setContactType(e.target.value);}}),\"Feedback\"]})]}),/*#__PURE__*/_jsx(StyledLabel,{htmlFor:\"message\",children:\"Message:\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(StyledTextArea,{name:\"message\",placeholder:\"Give us a little more info about your contact in order to better assist you!\",defaultValue:message,onChange:function onChange(e){return setMessage(e.target.value);}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(StyledButton,{onClick:addContactForm,children:\"Submit Contact\"})]})]})});};export default Form;","map":{"version":3,"sources":["/Users/juanaguilera/Desktop/Developing/local_django_react/joak_django/joak/frontend/src/components/ContactForm/Form.js"],"names":["axios","React","useState","useHistory","StyledContactFormContainer","StyledContactForm","StyledInput","StyledFieldSet","StyledTextArea","StyledError","StyledButton","StyledH2","StyledLabel","validate","useForm","Form","submitForm","history","firstName","setFirstName","lastName","setLastName","phoneNumber","setPhoneNumber","email","setEmail","contactType","setContactType","message","setMessage","addContactForm","formField","FormData","append","method","url","data","then","response","console","log","push","e","target","value"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\r\nimport axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { StyledContactFormContainer, StyledContactForm, StyledInput, StyledFieldSet, StyledTextArea, StyledError, StyledButton, StyledH2 , StyledLabel } from './ContactFormElements';\r\nimport validate from './validateInfo';\r\nimport useForm from './useForm';\r\n\r\n\r\nconst Form = ({ submitForm }) => {\r\n\r\n    let history = useHistory();\r\n\r\n    const [firstName, setFirstName] = useState(\"\")\r\n    const [lastName, setLastName] = useState(\"\")\r\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [contactType, setContactType] = useState(null);\r\n    const [message, setMessage] = useState(\"\")\r\n    \r\n    const addContactForm = async () => {\r\n        let formField = new FormData()\r\n        formField.append('first_name', firstName)\r\n        formField.append('last_name', lastName)\r\n        formField.append('phone_number', phoneNumber)\r\n        formField.append('email', email)\r\n        formField.append('contact_type', contactType)\r\n        formField.append('message', message)\r\n\r\n        await axios({\r\n            method: 'post',\r\n            url:'http://localhost:8000/api/contactform/',\r\n            data: formField\r\n          }).then(response=>{\r\n            console.log(response.data);\r\n            history.push('/')\r\n          })\r\n\r\n    };\r\n\r\n    // const { handleChange, handleSubmit, values, errors } = useForm(\r\n    //     submitForm,\r\n    //     validate\r\n    // );\r\n\r\n    return (\r\n        <>\r\n            <StyledContactFormContainer>\r\n            <StyledH2>Message Us!</StyledH2>\r\n                <StyledContactForm>\r\n                    <label htmlFor=\"firstName\"></label>\r\n                    <StyledInput \r\n                        type=\"text\" \r\n                        name=\"first_name\" \r\n                        placeholder=\"First Name\" \r\n                        defaultValue={firstName}\r\n                        onChange={(e) => setFirstName(e.target.value)}\r\n                        \r\n                    />\r\n                    {/* {errors.firstName && <p>{errors.firstName}</p>} */}\r\n                    <label htmlFor=\"lastName\"></label>\r\n                    <StyledInput \r\n                        type=\"text\" \r\n                        name=\"last_name\" \r\n                        placeholder=\"Last Name\" \r\n                        defaultValue={lastName} \r\n                        onChange={(e) => setLastName(e.target.value)}\r\n\r\n                    />\r\n                    {/* {errors.lastName && <p>{errors.lastName}</p>} */}\r\n                    <br />\r\n                    <label htmlFor=\"phoneNumber\"></label>\r\n                    <StyledInput \r\n                        type=\"text\" \r\n                        name=\"phone_number\" \r\n                        placeholder=\"Phone Number\" \r\n                        defaultValue={phoneNumber} \r\n                        onChange={(e) => setPhoneNumber(e.target.value)}\r\n\r\n                    />\r\n                    {/* {errors.phoneNumber && <p>{errors.phoneNumber}</p>} */}\r\n                    <label htmlFor=\"email\"></label>\r\n                    <StyledInput \r\n                        type=\"email\" \r\n                        name=\"email\" \r\n                        placeholder=\"Email\" \r\n                        defaultValue={email} \r\n                        onChange={(e) => setEmail(e.target.value)}\r\n\r\n                    />\r\n                    {/* {errors.email && <p>{errors.email}</p>} */}\r\n                    <StyledFieldSet>\r\n                        <legend>Contact Type</legend>\r\n                        <label>\r\n                            <input \r\n                                type=\"radio\" \r\n                                defaultValue=\"Question\" \r\n                                name=\"contact_type\" \r\n                                onChange={(e) => setContactType(e.target.value)} \r\n\r\n                            />\r\n                            Question\r\n                        </label>\r\n                        <label>\r\n                            <input \r\n                                type=\"radio\" \r\n                                defaultValue=\"Concern\" \r\n                                name=\"contact_type\" \r\n                                onChange={(e) => setContactType(e.target.value)} \r\n\r\n                            />\r\n                            Concern\r\n                        </label>\r\n                        <label>\r\n                            <input \r\n                                type=\"radio\" \r\n                                defaultValue=\"Feedback\" \r\n                                name=\"contact_type\" \r\n                                onChange={(e) => setContactType(e.target.value)} \r\n\r\n                            />\r\n                            Feedback\r\n                        </label>\r\n                    </StyledFieldSet>\r\n                    <StyledLabel htmlFor=\"message\">Message:</StyledLabel>\r\n                    <br />\r\n                    <StyledTextArea \r\n                        name=\"message\" \r\n                        placeholder=\"Give us a little more info about your contact in order to better assist you!\" \r\n                        defaultValue={message} \r\n                        onChange={(e) => setMessage(e.target.value)} \r\n                    \r\n                    />\r\n                    {/* {errors.message && <p>{errors.message}</p>} */}\r\n                    <br />\r\n                    <StyledButton onClick={addContactForm}>Submit Contact</StyledButton>\r\n                </StyledContactForm>\r\n            </StyledContactFormContainer>\r\n        </>\r\n    );      \r\n};\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}