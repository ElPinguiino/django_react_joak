{"ast":null,"code":"var _jsxFileName = \"/Users/juanaguilera/Desktop/Developing/local_django_react/joak_django/joak/frontend/src/components/ContactForm/Form.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-undef */\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { StyledContactFormContainer, StyledContactForm, StyledInput, StyledFieldSet, StyledTextArea, StyledButton, StyledH2, StyledLabel } from './ContactFormElements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  let history = useHistory();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [contactType, setContactType] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    console.log({\n      contactType\n    });\n  }, [contactType]);\n\n  const addContactForm = async e => {\n    let formField = new FormData();\n    formField.append('first_name', firstName);\n    formField.append('last_name', lastName);\n    formField.append('phone_number', phoneNumber);\n    formField.append('email', email);\n    formField.append('contact_type', contactType);\n    formField.append('message', message);\n    e.preventDefault();\n    console.log(\"I was clicked\");\n    console.log({\n      formField\n    });\n    await axios({\n      method: 'post',\n      url: 'http://127.0.0.1:8000/api/contactform/',\n      data: formField\n    }).then(response => {\n      console.log(response.data); // history.push('/')\n    }).catch(error => console.error(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StyledContactFormContainer, {\n      children: [contactType, /*#__PURE__*/_jsxDEV(StyledH2, {\n        children: \"Message Us!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(StyledContactForm, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n          type: \"text\",\n          name: \"first_name\",\n          placeholder: \"First Name\",\n          defaultValue: firstName,\n          onChange: e => setFirstName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n          type: \"text\",\n          name: \"last_name\",\n          placeholder: \"Last Name\",\n          defaultValue: lastName,\n          onChange: e => setLastName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phoneNumber\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n          type: \"text\",\n          name: \"phone_number\",\n          placeholder: \"Phone Number\",\n          defaultValue: phoneNumber,\n          onChange: e => setPhoneNumber(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          defaultValue: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StyledFieldSet, {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Contact Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              defaultValue: \"Question\",\n              name: \"contact_type\",\n              onChange: e => setContactType(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), \"Question\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              defaultValue: \"Concern\",\n              name: \"contact_type\",\n              onChange: e => setContactType(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), \"Concern\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              defaultValue: \"Feedback\",\n              name: \"contact_type\",\n              onChange: e => setContactType(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), \"Feedback\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StyledLabel, {\n          htmlFor: \"message\",\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StyledTextArea, {\n          name: \"message\",\n          placeholder: \"Give us a little more info about your contact in order to better assist you!\",\n          defaultValue: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n          onClick: e => addContactForm(e),\n          children: \"Submit Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Form, \"doQPManrRA1gaT3HHR7CyILB/78=\", false, function () {\n  return [useHistory];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/juanaguilera/Desktop/Developing/local_django_react/joak_django/joak/frontend/src/components/ContactForm/Form.js"],"names":["axios","React","useState","useEffect","useHistory","StyledContactFormContainer","StyledContactForm","StyledInput","StyledFieldSet","StyledTextArea","StyledButton","StyledH2","StyledLabel","Form","history","firstName","setFirstName","lastName","setLastName","phoneNumber","setPhoneNumber","email","setEmail","contactType","setContactType","message","setMessage","console","log","addContactForm","e","formField","FormData","append","preventDefault","method","url","data","then","response","catch","error","target","value"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { StyledContactFormContainer, StyledContactForm, StyledInput, StyledFieldSet, StyledTextArea, StyledButton, StyledH2 , StyledLabel } from './ContactFormElements';\r\n\r\nconst Form = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const [firstName, setFirstName] = useState(\"\")\r\n    const [lastName, setLastName] = useState(\"\")\r\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [contactType, setContactType] = useState(null)\r\n    const [message, setMessage] = useState(\"\")\r\n    \r\n    useEffect(()=> {console.log({contactType})}, [contactType])\r\n\r\n    const addContactForm = async (e) => {\r\n        let formField = new FormData()\r\n        formField.append('first_name', firstName)\r\n        formField.append('last_name', lastName)\r\n        formField.append('phone_number', phoneNumber)\r\n        formField.append('email', email)\r\n        formField.append('contact_type', contactType)\r\n        formField.append('message', message)\r\n        e.preventDefault();\r\n        console.log(\"I was clicked\")\r\n        console.log({formField})\r\n        await axios({\r\n            method: 'post',\r\n            url:'http://127.0.0.1:8000/api/contactform/',\r\n            data: formField\r\n          }).then(response=>{\r\n            console.log(response.data);\r\n            // history.push('/')\r\n          }).catch(error=>console.error(error))\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <StyledContactFormContainer>\r\n                {contactType}\r\n            <StyledH2>Message Us!</StyledH2>\r\n                <StyledContactForm>\r\n                    <label htmlFor=\"firstName\"></label>\r\n                    <StyledInput \r\n                        type=\"text\" \r\n                        name=\"first_name\" \r\n                        placeholder=\"First Name\" \r\n                        defaultValue={firstName}\r\n                        onChange={(e) => setFirstName(e.target.value)}\r\n                        \r\n                    />\r\n                    {/* {errors.firstName && <p>{errors.firstName}</p>} */}\r\n                    <label htmlFor=\"lastName\"></label>\r\n                    <StyledInput \r\n                        type=\"text\" \r\n                        name=\"last_name\" \r\n                        placeholder=\"Last Name\" \r\n                        defaultValue={lastName} \r\n                        onChange={(e) => setLastName(e.target.value)}\r\n\r\n                    />\r\n                    {/* {errors.lastName && <p>{errors.lastName}</p>} */}\r\n                    <br />\r\n                    <label htmlFor=\"phoneNumber\"></label>\r\n                    <StyledInput \r\n                        type=\"text\" \r\n                        name=\"phone_number\" \r\n                        placeholder=\"Phone Number\" \r\n                        defaultValue={phoneNumber} \r\n                        onChange={(e) => setPhoneNumber(e.target.value)}\r\n\r\n                    />\r\n                    {/* {errors.phoneNumber && <p>{errors.phoneNumber}</p>} */}\r\n                    <label htmlFor=\"email\"></label>\r\n                    <StyledInput \r\n                        type=\"email\" \r\n                        name=\"email\" \r\n                        placeholder=\"Email\" \r\n                        defaultValue={email} \r\n                        onChange={(e) => setEmail(e.target.value)}\r\n\r\n                    />\r\n                    {/* {errors.email && <p>{errors.email}</p>} */}\r\n                    <StyledFieldSet>\r\n                        <legend>Contact Type</legend>\r\n                        <label>\r\n                            <input \r\n                                type=\"radio\" \r\n                                defaultValue=\"Question\" \r\n                                name=\"contact_type\" \r\n                                onChange={(e) => setContactType(e.target.value)} \r\n\r\n                            />\r\n                            Question\r\n                        </label>\r\n                        <label>\r\n                            <input \r\n                                type=\"radio\" \r\n                                defaultValue=\"Concern\" \r\n                                name=\"contact_type\" \r\n                                onChange={(e) => setContactType(e.target.value)} \r\n\r\n                            />\r\n                            Concern\r\n                        </label>\r\n                        <label>\r\n                            <input \r\n                                type=\"radio\" \r\n                                defaultValue=\"Feedback\" \r\n                                name=\"contact_type\" \r\n                                onChange={(e) => setContactType(e.target.value)} \r\n\r\n                            />\r\n                            Feedback\r\n                        </label>\r\n                    </StyledFieldSet>\r\n                    <StyledLabel htmlFor=\"message\">Message:</StyledLabel>\r\n                    <br />\r\n                    <StyledTextArea \r\n                        name=\"message\" \r\n                        placeholder=\"Give us a little more info about your contact in order to better assist you!\" \r\n                        defaultValue={message} \r\n                        onChange={(e) => setMessage(e.target.value)} \r\n                    \r\n                    />\r\n                    {/* {errors.message && <p>{errors.message}</p>} */}\r\n                    <br />\r\n                    <StyledButton \r\n                        onClick={(e)=> addContactForm(e)}\r\n\r\n                    >Submit Contact</StyledButton>\r\n                </StyledContactForm>\r\n            </StyledContactFormContainer>\r\n        </>\r\n    );      \r\n};\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}